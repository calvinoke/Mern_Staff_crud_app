{"ast":null,"code":"var _jsxFileName = \"F:\\\\MongoDB,Node,React Projects\\\\Staff_crud202\\\\frontend\\\\src\\\\Components\\\\DeleteUser.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Text, Flex, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport Popup from \"./Common/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteUser = ({\n  userId,\n  getUsersData\n}) => {\n  _s();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const toast = useToast();\n\n  //delete user function call\n  const confirmDelete = () => {\n    axios.delete(`http://localhost:5000/delete/${userId}`).then(res => {\n      getUsersData();\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        isClosable: true,\n        position: \"bottom\",\n        duration: 2000\n      });\n      onClose();\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"red\",\n      onClick: onOpen,\n      rightIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        mb: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Delete user\",\n      isOpen: isOpen,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          children: \"Are you sure? You wan't to delete this.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          my: 5,\n          gap: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"grey\",\n            onClick: onClose,\n            color: \"black\",\n            variant: \"outline\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            text: \"Delete\",\n            onClick: confirmDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteUser, \"KJAZPJVHTUUBz3y9kTLl3INA1BM=\", false, function () {\n  return [useDisclosure, useToast];\n});\n_c = DeleteUser;\nexport default DeleteUser;\nvar _c;\n$RefreshReg$(_c, \"DeleteUser\");","map":{"version":3,"names":["React","Button","Text","Flex","useDisclosure","useToast","DeleteIcon","axios","Popup","jsxDEV","_jsxDEV","DeleteUser","userId","getUsersData","_s","isOpen","onOpen","onClose","toast","confirmDelete","delete","then","res","title","data","message","status","isClosable","position","duration","catch","error","console","children","colorScheme","onClick","rightIcon","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","fontSize","my","gap","color","variant","text","_c","$RefreshReg$"],"sources":["F:/MongoDB,Node,React Projects/Staff_crud202/frontend/src/Components/DeleteUser.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  Flex,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport Popup from \"./Common/Popup\";\r\n\r\nconst DeleteUser = ({ userId, getUsersData }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n\r\n  //delete user function call\r\n  const confirmDelete = () => {\r\n    axios\r\n      .delete(`http://localhost:5000/delete/${userId}`)\r\n      .then((res) => {\r\n        getUsersData();\r\n        toast({\r\n          title: res.data.message,\r\n          status: \"success\",\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n          duration: 2000,\r\n        });\r\n        onClose();\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        colorScheme=\"red\"\r\n        onClick={onOpen}\r\n        rightIcon={<DeleteIcon mb={1} />}\r\n      >\r\n        Delete\r\n      </Button>\r\n\r\n      <Popup title=\"Delete user\" isOpen={isOpen} onClose={onClose}>\r\n        <Flex direction=\"column\">\r\n          <Text fontSize=\"lg\">Are you sure? You wan't to delete this.</Text>\r\n          <Flex my={5} gap=\"2\">\r\n            <Button\r\n              colorScheme=\"grey\"\r\n              onClick={onClose}\r\n              color=\"black\"\r\n              variant=\"outline\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button colorScheme=\"red\" text=\"Delete\" onClick={confirmDelete}>\r\n              Delete\r\n            </Button>\r\n          </Flex>\r\n        </Flex>\r\n      </Popup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}